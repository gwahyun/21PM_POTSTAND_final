<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
 
 	
 
 	<!-- 회원관리  -->
 	<select id="memberSelectCount" resultType="int">
 		select count(*) from member where member_sort = 'N'
 		<if test="searchType != null and searchKeyword != null and searchKeyword != ''">
 			and ${searchType} like '%'||#{searchKeyword}||'%' 
 		</if>
 	</select>
 
 	<select id="memberSelect" resultMap="memberMap">
 		select * from member m
		    join address a on m.member_id = a.member_id 
		    where member_sort = 'N' 
		    <if test="searchType != null and searchKeyword != null and searchKeyword != ''">
 				and m.${searchType} like '%'||#{searchKeyword}||'%' 
 			</if>
            order by m.enroll_date desc
 	</select>
 	
 	<select id="newReview" resultType="int">
 		select count(*) from review
   		 where review_date > sysdate -3
 	</select>
 	
 	
 	
 	<resultMap id="memberMap" type="member">
 		<id property="memberId" column="member_id"></id>
 		<result property="memberPwd" column="member_pwd"/>
 		<result property="memberName" column="member_name"/>
 		<result property="memberBirth" column="member_birth"/>
 		<result property="memberGender" column="member_gender"/>
 		<result property="memberEmail" column="member_email"/>
 		<result property="memberPhone" column="member_phone"/>
 		<result property="enrollDate" column="enroll_Date"/>
 		<result property="memberDate" column="member_date"/>
 		<result property="memberSort" column="member_sort"/>
 		<collection property="addresses" resultMap="addressMap"/>
 	</resultMap>
 	
 	<resultMap id="addressMap" type="address">
 		<id property="addrNo" column="addr_no"/>
 		<result property="memberId" column="member_id"/>
 		<result property="postNo" column="post_No"/>
 		<result property="roadAddr" column="road_Addr"/>
 		<result property="oldAddr" column="old_Addr"/>
 		<result property="detailAddr" column="detail_Addr"/>
 		<result property="defaultAddr" column="default_Addr"/>
 	</resultMap>
 	
 	<delete id="memberDelete">
 		delete from member where member_id = #{memberId}
 	</delete>
 	
 	<!-- 주소관리 -->
 	<select id="memberAddressList" resultMap="addressMap">
 		select * from address 
 	</select>
 	
 	
 	<!-- 공지사항 -->
 	<select id="noticeSelect" resultMap="noticeMap">
 		select * from notice
		order by notice_date desc
 	</select>
 	
 	<select id="noticeSelectCount" resultType="int">
 		select count(*) from notice
 	</select>
 	
 	<resultMap id="noticeMap" type="notice">
 		<id property="noticeNo" column="notice_no"/>
 		<result property="memberId" column="member_id"/>
 		<result property="noticeContent" column="notice_content"/>
 		<result property="noticeDate" column="notice_date"/>
 		<result property="noticeTitle" column="notice_title"/>
 		<result property="noticeView" column="notice_view"/>
 	</resultMap>
 
 	<insert id="noticeInsert">
 		insert into notice values(SEQ_NOTICE.NEXTVAL,#{memberId},#{noticeContent},sysdate,#{noticeTitle},0)
 	</insert>
 	
 	<select id="noticeUpdate" resultMap="noticeMap">
 		select * from notice where notice_no = #{no}
 	</select>
 	
 	<update id="noticeUpdateEnd">
 		update notice set notice_title = #{noticeTitle} , notice_content = #{noticeContent} where notice_no = #{noticeNo}
 	</update>
 	
 	<delete id="noticeDelte">
 		delete from notice where notice_no = #{no}
 	</delete>
 	
 	<!-- FAQ -->
 	<select id="faqSelect" resultMap="faqMap">
 		select * from faq
 	</select>
 	
 	<select id="faqSelectCount" resultType="int">
 		select count(*) from faq
 	</select>
 	
 	<resultMap id="faqMap" type="faq">
 		<id property="faqNo" column="faq_no"/>
 		<result property="faqTitle" column="faq_title"/>
 		<result property="faqContent" column="faq_content"/>
 	</resultMap>
 	
 	<insert id="faqInsert">
 		insert into faq values(seq_faq.nextval,#{faqTitle},#{faqContent})
 	</insert>
 	
 	<select id="faqUpdate" resultMap="faqMap">
 		select * from faq where faq_no = #{no}
 	</select>
 
 	<update id="faqUpdateEnd">
 		update faq set faq_title = #{faqTitle} , faq_content = #{faqContent} where faq_no = #{faqNo}
 	</update>
 	
 	<delete id="faqDelete">
 		delete from faq where faq_no = #{no}
 	</delete>
 	
 	<!-- QNA -->
 	
 	<select id="qnaSelectList" resultMap="qnaMap">
 		select * from qna order by qna_date desc
 	</select>
 	
 	<select id="qnaManagerCount" resultType="int">
 		select count(*) from qna
 	</select>
 	
 	<select id="qnaManagerNoCount" resultType="int">
 		select count(*) from qna where qna_status = 'N' 
 	</select>
 	
 	<select id="qnaSelectListNo" resultMap="qnaMap">
 		select * from qna where qna_status = 'N' order by qna_date desc
 	</select>
 	
 	<select id="qnaSelectOne" resultMap="qnaMap">
 		select * from qna where qna_no = #{no}
 	</select>
 	
 	<resultMap id="qnaMap" type="qna">
 		<id column="qna_no" property="qnaNo"/>
 		<result column="member_id" property="memberId"/>
 		<result column="qna_sort" property="qnaSort"/>
 		<result column="qna_title" property="qnaTitle"/>
 		<result column="qna_content" property="qnaContent"/>
 		<result column="qna_date" property="qnaDate"/>
 		<result column="qna_status" property="qnaStatus"/>
 	</resultMap>
 	
 	<insert id="qnaInsert">
 		insert into qna values(seq_qna.nextval,#{memberId},#{qnaSort},#{qnaTitle},#{qnaContent},default,'N')
 	</insert>
 	
 	<insert id="qnaAnswer">
 		insert into answer values(seq_answer.nextval,#{qnaNo},#{memberId},#{answerContent},default)
 	</insert>
 	
 	<select id="answerNo" resultType="int">
 		select count(*) from qna
  		  where qna_status = 'N'
 	</select>
 	
 	<select id="answerSelectOne" resultMap="answerMap">
 		select * from answer
 			where qna_no = #{no}
 	</select>
 	
 	<update id="qnaReplyUpdateEnd">
 		update answer
    		set answer_content = #{answerContent}
      			  where answer_no = #{answerNo}
 	</update>
 	
 	<resultMap id="answerMap" type="answer">
 		<id column="ANSWER_NO" property="answerNo"/>
 		<result column="QNA_NO" property="qnaNo"></result>
 		<result column="ADMIN_ID" property="adminId"></result>
 		<result column="ANSWER_CONTENT" property="answerContent"></result>
 		<result column="ANSWER_DATE" property="answerDate"></result>
 	</resultMap>
 	
 	<update id="qnaStatusUpdate">
 		update qna
 			set qna_status = 'Y'
 				where qna_no = #{qnaNo}
 	</update>
 	
 	<delete id="qnaDelete">
 		delete from qna where qna_no = #{no}
 	</delete>
 	
 
 	
 	<!-- review  -->
 	<select id="reviewManager" resultMap="reviewMap">
 		select * from review order by review_date desc
 	</select>
 	
 	<select id="reviewManagerCount" resultType="int">
 		select count(*) from review
 	</select>
 	
 	<resultMap type="review" id="reviewMap">
 		<id column="review_no" property="reviewNo"/>
 		<result column="book_code" property="bookCode"/>
 		<result column="member_id" property="memberId"/>
 		<result column="point" property="point"/>
 		<result column="review_content" property="reviewContent"/>
 		<result column="review_date" property="reviewDate"/>
 		<association property="book" resultMap="bookMap"/>
 	</resultMap>
 	
 	<delete id="reviewDelete">
 		delete from review where review_no = #{no}
 	</delete>
 	
 	<!-- event -->
 	
 	<select id="eventSelect" resultMap="eventMap">
 		select * from event
 		order by end_check asc
 	</select>
 	
 	<select id="eventSelectCount" resultType="_int">
 		select count(*) from event
 	</select>
 	
 	<select id="eventSelectOne" resultMap="eventMap">
 		select * from event where event_no = #{no}
 	</select>
 	
 	<resultMap id="eventMap" type="event">
 		<id column="event_no" property="eventNo"/>
 		<result column="event_title" property="eventTitle"/>
 		<result column="EVENT_INFO" property="eventInfo" />
 		<result column="EVENT_SHORT" property="eventShort"/>
 		<result column="EVENT_START" property="eventStart"/>
 		<result column="EVENT_END" property="eventEnd"/>
 		<result column="END_CHECK" property="endCheck"/>
 		<result column="EVENT_THUM" property="eventThum"/>
 		<result column="TYPE" property="type"/>
 		<result column="DISCOUNT" property="discount"/>
 	</resultMap>
 	
 	<insert id="eventInsertEnd">
 		insert into event values(seq_event.nextval,#{eventTitle},#{eventInfo},#{eventShort},sysdate,#{eventEnd},default,#{eventThum},#{type},#{discount})
 	</insert>
 	
 	<!-- eventList 테이블 삽입 -->
 	<insert id="eventBookInsert">
 		insert into event_list values(SEQ_EVENT_LIST.NEXTVAL,#{string},SEQ_EVENT.CURRVAL)
 	</insert>
 	
 	<select id="eventBookList" resultType="String">
 		select book_code from event_list where event_no = #{no}
 	</select>
 	
 	<delete id="eventNoBookDelete">
 		delete from event_list where event_no = #{eventNo}
 	</delete>
 	
	<insert id="eventBookUpdate">
		insert into event_list values(SEQ_EVENT_LIST.NEXTVAL,#{string},#{eventNo})
	</insert> 	
 <!-- 	<update id="eventEnd">
 		update event set end_check ='Y' where event_no = #{no}
 	</update> -->
 	
 	<!-- 얘는 날짜 지나면 이벤트 종료되는 sql문 -->
 	<update id="eventEndUpdate">
 		update event
    		set end_check = 'Y'
      			  where sysdate >= event_end
 	</update>
 	
 	<!-- 얘는 이벤트 수정 하는 sql 문 -->
 	<update id="eventUpdateEnd">
 	update event
   	 set event_title =#{eventTitle} , event_info = #{eventInfo} , event_short = #{eventShort},event_end = #{eventEnd} 
   	  <if test="eventThum != null and eventThum != ''">
   	 		, event_thum = #{eventThum}
   	 	</if>
   	 
    	    where event_no = #{eventNo}
 	</update>
 	
 	<delete id="eventDelete">
 		delete from event where event_no = #{no}
 	</delete>
 	
 	
 	<!-- book -->
 	<select id="bookSelectOne" resultMap="bookMap">
 		select * from book 
 			join sort using(sort_no)
 				where book_code = #{no}
 	</select>
 	
 	
 	<select id="productSelectList" resultMap="bookMap">
 		select * from book
 		join sort using(sort_no)
 		where 1=1
 		<if test="bookNo != null and bookNo != '' ">
 			and book_code = #{bookNo}
 		</if>
 		<if test="bookTitle != null and bookTitle != '' ">
 			and book_title like '%'||#{bookTitle}||'%'
 		</if>
 		<if test="bookAuthor != null and bookAuthor != '' ">
 			and BOOK_WRITER like '%'||#{bookAuthor}||'%' 
 		</if>
 		<if test="bookPublisher != null and bookPublisher != '' ">
 			and BOOK_PUB like '%'||#{bookPublisher}||'%' 
 		</if>
 		<if test="bookGenre != null and bookGenre != '' ">
 			and lv2 = #{bookGenre} or lv3 = #{bookGenre} or lv4 = #{bookGenre}
 		</if>
 	</select>
 	
 	<select id="productSelectListNopage" resultMap="bookMap">
 		select * from book
 		join sort using(sort_no)
 	</select>
 	
 	<select id="eventBookSelectList" resultMap="bookMap">
 		select * from book
 		<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   					where ${searchType} like '%'||#{searchKeyword}||'%'
		</if>
 	</select>
 	
 	<select id="eventSelectCountParam" resultType="int">
 		select count(*) from book
 		<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   					where ${searchType} like '%'||#{searchKeyword}||'%'
		</if>
 	</select>
 		
 		
 		
 	
 	<select id="productSelectListCount" resultType="int">
 		select count(*) from book
 		join sort using(sort_no)
 		where 1=1
 		<if test="bookNo != null and bookNo != '' ">
 			and book_code = #{bookNo}
 		</if>
 		<if test="bookTitle != null and bookTitle != '' ">
 			and book_title like '%'||#{bookTitle}||'%'
 		</if>
 		<if test="bookAuthor != null and bookAuthor != '' ">
 			and BOOK_WRITER like '%'||#{bookAuthor}||'%' 
 		</if>
 		<if test="bookPublisher != null and bookPublisher != '' ">
 			and BOOK_PUB like '%'||#{bookPublisher}||'%' 
 		</if>
 		<if test="bookGenre != null and bookGenre != '' ">
 			and lv2 = #{bookGenre} or lv3 = #{bookGenre} or lv4 = #{bookGenre}
 		</if>
 	</select>
 	
 	<resultMap id="bookMap" type="book">
 		<id column="BOOK_CODE" property="bookCode"/>
		<result column="BOOK_TITLE" property="bookTitle"/>
		<result column="BOOK_WRITER" property="bookWriter"/>
		<result column="BOOK_PUB" property="bookPub"/>
		<result column="BOOK_COST" property="bookCost"/>
		<result column="BOOK_SHORT" property="bookShort"/>
		<result column="BOOK_COVER" property="bookCover"/>
		<result column="BOOK_DATE" property="bookDate"/>
		<result column="BOOK_STOCK" property="bookStock"/>
		<result column="BOOK_LINK" property="bookLink"/>
		<result column="BOOK_INTRO" property="bookIntro"/>
		<result column="WRITER_INTRO" property="writerIntro"/>
		<result column="BOOK_INDEX" property="bookIndex"/>
		<result column="PUB_REVIEW" property="pubReview"/>
		<result column="BOOK_EXTRACT" property="bookExtract"/>
		<result column="RECOMMAND" property="recommand"/>
		<result column="INTRO_MV" property="introMv"/>
		<association column="SORT_NO" property="sort" select="selectSortByPK"/>
 	</resultMap>
 	
 	<resultMap type="sort" id="sortMap">
		<id column="SORT_NO" property="sortNo"/>
		<result column="LV1" property="lv1"/>
		<result column="LV2" property="lv2"/>
		<result column="LV3" property="lv3"/>
		<result column="LV4" property="lv4"/>		
	</resultMap>
	
	<select id="selectSortByPK" resultMap="sortMap">
		SELECT * FROM SORT WHERE SORT_NO=#{sortNo}
	</select>

	<!-- 크롤링해서 가져온 데이터들 Book Table에 쏴주는 과정 -->
 	<update id="bookInsertRinkCrowling">
 		update book
     	   set 
 			<if test="bookIntro != null">
 				book_intro = #{bookIntro}
 			</if>
 			<if test="bookIntro == null">
 				book_intro = null
 			</if> 
 			 <if test="writerIntro == null">
 				,writer_intro = null
 			</if>
 			<if test="writerIntro != null">
 				,writer_intro = #{writerIntro}
 			</if> 
 			<if test="bookIndex == null">
 				,book_index = null
 			</if>
 			<if test="bookIndex != null">
 				,book_index = #{bookIndex}
 			</if> 
 			<if test="pubReview == null">
 				,pub_review = null
 			</if>
 			<if test="pubReview != null">
 				,pub_review = #{pubReview}
 			</if>
 			<if test="bookExtract == null">
 				,book_extract = null
 			</if>
 			<if test="bookExtract != null">
 				,book_extract = #{bookExtract}
 			</if>
			<if test="recommand == null">
 				,recommand = null
 			</if>
 			<if test="recommand != null">
 				,recommand = #{recommand}
 			</if>
 			<if test="introMv == null">
 				,intro_mv = null
 			</if>
 			<if test="introMv != null">
 				,intro_mv = #{introMv}
 			</if>
 					where book_code = #{bookCode}
 	</update>
 	
 	<select id="bookCodeSelectOne" resultType="int">
		select seq_book.currval from dual 	
 	</select>
 	
 	
 	<!-- 재고관리 -->
 	<select id="stockManagerListCount" resultType="int">
 		select count(*) from book
 			<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   					where ${searchType} like '%'||#{searchKeyword}||'%'
   				</if>
 	</select>
 	
 	<select id="stockManagerList" resultMap="bookMap">
 		select * from book
 			<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   					where ${searchType} like '%'||#{searchKeyword}||'%'
   				</if>
 	</select>
 	
 	<update id="stockUpdate">
 		update book 
 			set book_stock = book_stock + #{no}
 				where book_code = #{bookCode}
 	</update>
 	
 	<!-- request -->
 	<resultMap id="requestMap" type="request">
 		<id column="REQUEST_NO" property="requestNo"></id>
 		<result column="MEMBER_ID" property="memberId"></result>
 		<result column="STATUS" property="status"></result>
 		<result column="REQUEST_DATE" property="requestDate"></result>
 		<result column="RESPONSE_DATE" property="responseDate"></result>
 		<association property="book" resultMap="bookMap"/>
  	</resultMap>
  	
 	<select id="requestSelectListCount" resultType="int">
 		select count(*) from request r
    	join book b on r.book_code = b.book_code
    	<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   			where ${searchType} like '%'||#{searchKeyword}||'%'
   		</if>
 	</select>
 	
 	<select id="requestSelectList" resultMap="requestMap">
 		select * from request r
    	join book b on r.book_code = b.book_code
    		<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   			where ${searchType} like '%'||#{searchKeyword}||'%'
   		</if>
 	</select>
 	
 	<select id="requestSelectNoCount" resultType="int">
 		select count(*) from request r
    	join book b on r.book_code = b.book_code
    		where status = 'N'
    			<if test="searchType != null and searchKeyword != '' and searchKeyword != null">
   					and ${searchType} like '%'||#{searchKeyword}||'%'
   				</if>
 	</select>
 	
	<select id="requestSelectNo" resultMap="requestMap">
 		select * from request r
    	join book b on r.book_code = b.book_code
    		where status = 'N'
    			<if test="searchType != null and searchKeyword != '' and  searchKeyword != null">
   					and ${searchType} like '%'||#{searchKeyword}||'%'
   				</if>
 	</select>
 	
 	
 	<update id="requestUpdate">
 		<!-- update request
    		set status = 'Y' , RESPONSE_DATE = sysdate
        	where request_no = #{requestNo} -->
        	update request
			    set status = 'Y' , response_date = sysdate
			        where book_code = (select book_code from book where book_code = #{bookCode})
 	</update>
 	

  
  	
  	<!-- 상품 등록 sql문 -->
  	<select id="bookGenreSelectOne" resultMap="sortMap">
  		 select * from sort
   		 where lv2 = #{bookGenre} or lv3 = #{bookGenre} or lv4 = #{bookGenre}
  	</select>
  	
  	<insert id="productInsertEnd"  parameterType="book">
  		insert into book values(seq_book.nextval, #{sort.sortNo}, #{bookTitle}, #{bookWriter}, #{bookPub}, #{bookCost}, #{bookPub} , #{bookCover}, #{bookDate}, #{bookStock}, #{bookLink},#{writerIntro}, #{bookIntro}, #{bookIndex}, #{pubReview}, #{bookExtract}, #{recommand}, #{introMv})
  	</insert>
  	
  	<update id="productUpdate" parameterType="book">
  		update book
   	   		set book_title = #{bookTitle} 
   	   			, sort_no = #{sort.sortNo} , book_writer = #{bookWriter} , book_pub = #{bookPub}
   	   			, book_short = #{bookShort}
   	   			, book_cost = #{bookCost} ,  book_date = #{bookDate}
   	   			, book_intro = #{bookIntro} , writer_intro = #{writerIntro} , book_index = #{bookIndex}
   	   			, pub_review = #{pubReview} , book_extract = #{bookExtract} , recommand = #{recommand}
   	   			, intro_mv = #{introMv}
   	   			 	  <if test="bookCover != null and bookCover != ''">
				   	 		, book_cover = #{bookCover}
				   	 	</if>
 					where book_code = #{bookCode}
  	</update>
  	
  	<delete id="productDelete" parameterType="int">
  		delete from book where book_code = #{no}
  	</delete>
  	
  	<!-- db 세팅할 때 book_code / Link 가져오는 select문 -->
  	<select id="selectBCAndBL" resultType="HashMap">
  		SELECT BOOK_CODE, BOOK_LINK FROM BOOK
  	</select>
 	
 	<!-- 차트에 필요한 날짜 -->
 	<select id="dateOne" resultType="HashMap">
 		SELECT  TO_CHAR(SYSDATE-6, 'YY-MM-DD') AS 일주일, TO_CHAR(SYSDATE, 'YY-MM-DD') AS 오늘
    	FROM DUAL
 	</select>
 	
 	<!-- 차트에 필요할 날짜 -->
	<select id="startDate" resultType="String">
		 select to_char(to_date(
		 <choose>
		 	<when test="startDateStr == null">
		 		${startDate}
		 	</when>
		 	<otherwise>
		 		#{startDateStr}
		 	</otherwise>
		 </choose>
		,'YY-MM-DD') + (LEVEL-1),'YY-MM-DD') dates
 		 from dual CONNECT BY LEVEL <![CDATA[<]]>= (to_date(SYSDATE,'YY-MM-DD') - to_date(
 			 <choose>
		 	<when test="startDateStr == null">
		 		${startDate}
		 	</when>
		 	<otherwise>
		 		#{startDateStr}
		 	</otherwise>
		 </choose>
 		 ,'YY-MM-DD') + 1)
	</select>
	
	<resultMap type="com.kh.potstand.order.model.vo.Payment" id="paymentMap">
		<id column="PAYMENT_NO" property="orderNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="RECEIVER_NAME" property="receiverName"/>
		<result column="RECEIVER_ADDR" property="receiverAddr"/>
		<result column="MESSAGE" property="message"/>
		<result column="POST_MESSAGE" property="postMessage"/>
		<result column="name" property="name"/>
		<result column="PAY_METHOD" property="payMethod"/>
		<result column="MERCHANT_UID" property="merchantUid"/>
		<result column="AMOUNT" property="amount"/>
		<result column="PAY_DATE" property="payDate"/>
		<result column="ORDER_STATE" property="orderState"/>
		<association column="USED_COUPON_NO" property="coupon"/>
	</resultMap>
	
	<resultMap type="com.kh.potstand.order.model.vo.PaymentObj" id="paymentObjMap">
		<id column="PAYMENT_NO" property="objNo"/>
		<result column="BOOK_AMOUNT" property="bookAmount"/>
		<association column="BOOK_CODE" property="book"/>
		<association column="USED_COUPON_NO" property="coupon"/>
		<association column="PAYMENT_NO" property="payment"/>		
	</resultMap>
	
		<!-- 결제 연습 -->
  	<select id="orderSelectList" resultMap="paymentMap">
  		select * from payment
  		where 1 = 1
  			<if test="dType != null and dType != '전체'">
  				and ORDER_STATE = #{dType}
  			</if>
  			<if test="type != null and type != '전체' and keyword != ''">
  				and ${type} = #{keyword}
  			</if>
  		
  			<if test="endDate != null and startDate != null">
  			and to_date(pay_date,'YY-MM-DD') <![CDATA[<=]]> #{endDate} and to_date(pay_date,'YY-MM-DD') >= #{startDate}
  			</if>
  	</select>
  	
  	<select id="orderSelectListCount" resultType="int">
	  	select count(*) from payment
	  		where 1 = 1
	  			<if test="dType != null and dType != '전체'">
	  				and ORDER_STATE = #{dType}
	  			</if>
	  			<if test="type != null and type != '전체'">
	  				and ${type} = #{keyword}
	  			</if>
	  		
	  			<if test="endDate != null and startDate != null">
	  			and PAY_DATE <![CDATA[<]]> #{endDate} and PAY_DATE > #{startDate}
	  			</if>
  	</select>
  	
  	<!-- <resultMap type="com.kh.potstand.admin.model.vo.Credit" id="creditMap">
  		<id column="CREDITNO" property="creditNo"></id>
  		<result column="MEMBERID" property="memberId"></result>
  		<result column="PRODUCTNO" property="productNo"></result>
  		<result column="STOCK" property="stock"></result>
  		<result column="STATUS" property="status"></result>
  		<result column="CREDITDATE" property="creditDate"></result>
  		<result column="RECIPIENT" property="recipient"></result>
  		<result column="SHOPADDRESS" property="shopAddress"></result>
  		<result column="PHONE" property="phone"></result>
  		<result column="PRICE" property="price"></result>
  	</resultMap> -->
	
	<select id="priceDateList" resultType="int">
		select nvl(sum(amount),0) from payment where to_date(pay_date,'YY-MM-DD') = #{str}
	</select>
	
	<select id="amountDateList" resultType="int">
		 select nvl(sum(book_amount),0) from payment_obj 
	         join payment using(payment_no)        
	    	where to_date(pay_date,'YY-MM-DD') = #{str}
	</select>
	
	 <select id="orderCountMap1" resultType="int">
		  select count(*) as count1 from payment
  			  where pay_date > sysdate-7
	</select>
	
	<select id="orderCountMap2" resultType="int">
		    select count(*) count2 from payment
   			  where order_state = '결제완료' and pay_date > sysdate-7
	</select>
	
	<select id="orderCountMap3" resultType="int">
		  select count(*) count3 from payment
  			  where order_state = '배송중' and pay_date > sysdate-7
	</select>
	
	<select id="orderCountMap4" resultType="int">
		  select count(*) count4 from payment
  			  where order_state = '배송완료' and pay_date > sysdate-7
	</select> 
	
	<select id="creditDateList" resultMap="paymentMap">
			select * from payment where to_date(PAY_DATE,'YY-MM-DD') >= 
		 <choose>
		 	<when test="startDateStr == null">
		 		${startDate}
		 	</when>
		 	<otherwise>
		 		#{startDateStr}
		 	</otherwise>
		 </choose>
	</select>
	
	
	<!-- 정산관리  -->
	<select id="sumPrice" resultType="int">
		select nvl(sum(amount),0) from payment where to_date(pay_date,'YY-MM-DD') >= 
		 <choose>
		 	<when test="startDateStr == null">
		 		${startDate}
		 	</when>
		 	<otherwise>
		 		#{startDateStr}
		 	</otherwise>
		 </choose>
	</select>
	
	<update id="statusUpdate">
		update payment
			set order_state = #{status}
				where payment_no = ${no}
	</update>

	<!-- 충돌날까봐 카트 일단 여기가 넣음 -->
	
	<!-- 중복인지 확인 하는 문 -->
	<select id="cartSelectDistinct" resultMap="cartMap">
		select * from cart 
    		where member_id = #{memberId} and book_code = #{bookCode}
	</select>
	
	<!-- 중복이면 원래 있던 데이터에서 수량 + 해줌 -->
	<update id="cartSelectOnePlus">
		update cart
   	 		set book_amount = book_amount + #{quant}
      		  where member_id = #{memberId} and book_code = #{bookCode}

	</update>
	
	<!-- 중복아니면 카트 삽입하는 문 -->
	<insert id="cartInsert">
		insert into cart values(seq_cart.nextval,#{memberId},#{bookCode},#{quant},null)
	</insert>
	
	<resultMap type="coupon" id="couponMap">
		<id column="COUPON_NO" property="couponNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="START_DATE" property="startDate"/>
		<result column="VAL_DATE" property="valDate"/>
		<result column="USED_DATE" property="usedDate"/>
		<result column="COUPON_END" property="couponEnd"/>
		<result column="COUPON_AMOUNT" property="couponAmount"/>
		<association column="EVENT_NO" property="event" select="selectEventByPK"/>
	</resultMap>
	
	
	<resultMap type="cart" id="cartMap">
		<id column="CART_NO" property="cartNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="BOOK_AMOUNT" property="bookAmount"/>
		<result column="USED_COUPON_NO" property="usedCouponNo"/>
		<association property="book" resultMap="bookMap"/>	
		<collection property="coupon" resultMap="couponMap"/>
	</resultMap>
	
 	
</mapper>
